
#include <stdio.h>
#include <stdlib.h>

int* negGate(int a[], int size){
    int *out = (int*)malloc(size * sizeof(int));
    for(int i = 0; i < size; ++i){
        if(a[i] == 0){
            out[i] = 1;
        } else {
            out[i] = 0;
        }
    }
    return out;
}

int* orGate(int a[], int b[], int size){
    int *out = (int*)malloc(size * sizeof(int));
    
    for(int i = 0; i < size; ++i){
        if(a[i] == 1 || b[i] == 1){
            out[i] = 1;
        }else{
            out[i] = 0;
        }
    }
    
    return out;

}

int* andGate(int a[], int b[], int size){
  int *out = (int*)malloc(size * sizeof(int));
    for(int i = 0; i < size; ++i){
        if((a[i] == 1 && b[i] == 1)){
            out[i] = 1;
        }else{
            out[i] = 0;    
        }
    }
    
    return out;
    
    // int arr[5]={45,67,34,78,90};  
 
}

int main() {
    // !AB + A!B
    
    
    // 1. We first take the first equation !AB + A!B and assign the values to A and B.
    // 2. Now we iterate through the array of inputs of all the variables, performing the specified operations like AND, NOT, OR.
    // 3. Now, we cumulate the results of various functions and get the final answer
    // 4. We repeat this process for the second equation- (A!B+C)!CA.
    
    
    int size = 4;
    int a[4]  = {0,0,1,1};
    int b[4] = {0,1,0,1};
    
    
    
    int *eq =  orGate(andGate(negGate(a, size), b, size), andGate(negGate(b, size), a, size), size);
    
    printf("!AB + A!B :");
    for(int i = 0; i < size; ++i){
        printf("%d ", eq[i]);
    }
    
    size = 8;
    int d[8] = {0,0,0,0,1,1,1,1};
    int e[8] = {0,0,1,1,0,0,1,1};
    int f[8] = {0,1,0,1,0,1,0,1};
    
    int *eq2 = andGate(orGate(andGate(d, negGate(e, size), size), f, size), andGate(f, negGate(d,size), size), size);
    
    
    
    printf("\n");
    printf("(A!B+C)!CA: ");
    for(int i = 0; i < size; ++i){
        printf("%d ", eq2[i]);
    }
    
    
}
